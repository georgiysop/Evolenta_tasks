package base_logical;


import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Scanner;

//2.22 –ó–∞–¥–∞–Ω–∏–µ 5. –î–∞—Ç—ã. SimpleDateFormat, Calendar, —Ü–∏–∫–ª—ã, —É—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã (—Å–ø–∏—Å–∫–∏ –∏ –º–∞–ø—ã –ø–æ –∂–µ–ª–∞–Ω–∏—é).
//üí°- –í–≤–µ—Å—Ç–∏ —Å –∫–æ–Ω—Å–æ–ª–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–∞: 31.12.2020, —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –µ–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∫–ª–∞—Å—Å–∞ Date (–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–≤ –≤–≤–µ–¥–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º SimpleDateFormat)
//üí°- –£–≤–µ–ª–∏—á–∏—Ç—å –¥–∞—Ç—É –Ω–∞ 45 –¥–Ω–µ–π –∏ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω
//üí°- –°–¥–≤–∏–Ω—É—Ç—å –¥–∞—Ç—É –Ω–∞ –Ω–∞—á–∞–ª–æ –≥–æ–¥–∞ –∏ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω
//üí°- –£–≤–µ–ª–∏—á–∏—Ç—å –¥–∞—Ç—É –Ω–∞ 10 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π (—Å—á–∏—Ç–∞–µ–º —Å—É–±–±–æ—Ç—ã –∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è –≤—ã—Ö–æ–¥–Ω—ã–º–∏) –∏ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω
//üí°- –í–≤–µ—Å—Ç–∏ —Å –∫–æ–Ω—Å–æ–ª–∏ –≤—Ç–æ—Ä—É—é –¥–∞—Ç—É –≤ —Ç–æ–º –∂–µ —Ñ–æ—Ä–º–∞—Ç–µ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –µ–µ –≤ –¥—Ä—É–≥–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∫–ª–∞—Å—Å–∞ Date
//üí°- –ü–æ—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π (—Å—É–±–±–æ—Ç—ã –∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è - –≤—ã—Ö–æ–¥–Ω—ã–µ) –º–µ–∂–¥—É –ø–µ—Ä–≤–æ–π –∏ –≤—Ç–æ—Ä–æ–π –¥–∞—Ç–∞–º–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ —Å –∫–æ–Ω—Å–æ–ª–∏ –∏ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω

//–ü—Ä–∏–º–µ—Ä:
//–í—ã–≤–æ–¥: –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ dd.MM.yyyy:
//–í–≤–æ–¥: 10.01.2024
//–í—ã–≤–æ–¥: –î–∞—Ç–∞ –ø–æ—Å–ª–µ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –Ω–∞ 45 –¥–Ω–µ–π: 24.02.2024
//–í—ã–≤–æ–¥: –î–∞—Ç–∞ –ø–æ—Å–ª–µ —Å–¥–≤–∏–≥–∞ –Ω–∞ –Ω–∞—á–∞–ª–æ –≥–æ–¥–∞: 01.01.2024
//–í—ã–≤–æ–¥: –î–∞—Ç–∞ –ø–æ—Å–ª–µ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –Ω–∞ 10 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π: 24.01.2024
//–í—ã–≤–æ–¥: –í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä—É—é –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ dd.MM.yyyy:
//–í–≤–æ–¥: 01.01.2024
//–í—ã–≤–æ–¥: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π –º–µ–∂–¥—É –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏: 7


public class Task_5 {

    private static void WorkingDays(Calendar calendar, int workingDays) {
        while (workingDays > 0) {
            calendar.add(Calendar.DAY_OF_MONTH, 1);
            int dayWeek = calendar.get(Calendar.DAY_OF_WEEK);
            if (dayWeek != Calendar.SATURDAY && dayWeek != Calendar.SUNDAY) {
                workingDays--;
            }
        }
    }

    private static int countWorkingDays(Date startDate, Date endDate) {
        Calendar startCal = Calendar.getInstance();
        startCal.setTime(startDate);
        Calendar endCal = Calendar.getInstance();
        endCal.setTime(endDate);

        int workingDays = 0;

        // –ï—Å–ª–∏ startDate –ø–æ–∑–∂–µ endDate, –º–µ–Ω—è–µ–º –∏—Ö –º–µ—Å—Ç–∞–º–∏
        if (startCal.after(endCal)) {
            Calendar temp = startCal;
            startCal = endCal;
            endCal = temp;
        }

        // –ò—Å–∫–ª—é—á–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –¥–∞—Ç—É –∏–∑ –ø–æ–¥—Å—á–µ—Ç–∞
        startCal.add(Calendar.DAY_OF_MONTH, 1);

        while (!startCal.after(endCal) ) {
            int dayWeek = startCal.get(Calendar.DAY_OF_WEEK);
            if (dayWeek != Calendar.SATURDAY && dayWeek != Calendar.SUNDAY) {
                workingDays++;
            }
            startCal.add(Calendar.DAY_OF_MONTH, 1);
        }
        return workingDays;
    }

    public static void main(String[] args) {
        System.out.println("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ dd.MM.yyyy:");
        Scanner in = new Scanner(System.in);
        String str_date_1 = in.nextLine();


        SimpleDateFormat ft = new SimpleDateFormat("dd.MM.yyyy");
        try {
            Calendar calendar = Calendar.getInstance();
            Date date_1 = ft.parse(str_date_1);
            calendar.setTime(date_1);

            calendar.add(Calendar.DAY_OF_YEAR, 45);
            System.out.println("–î–∞—Ç–∞ –ø–æ—Å–ª–µ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –Ω–∞ 45 –¥–Ω–µ–π: " + ft.format(calendar.getTime()));

            calendar.set(Calendar.DAY_OF_YEAR, 1);
            System.out.println("–î–∞—Ç–∞ –ø–æ—Å–ª–µ —Å–¥–≤–∏–≥–∞ –Ω–∞ –Ω–∞—á–∞–ª–æ –≥–æ–¥–∞: " + ft.format(calendar.getTime()));

            calendar.setTime(date_1);
            WorkingDays(calendar, 10);
            System.out.println("–î–∞—Ç–∞ –ø–æ—Å–ª–µ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –Ω–∞ 10 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π: " + ft.format(calendar.getTime()));

            System.out.println("–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä—É—é –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ dd.MM.yyyy:");
            String str_date_2 = in.nextLine();
            Date date_2 = ft.parse(str_date_2);

            int workingDayss = countWorkingDays(date_1, date_2);
            System.out.println("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π –º–µ–∂–¥—É –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏: " + workingDayss);
            in.close();
        } catch (ParseException e) {
            e.printStackTrace();
            System.out.println("–û—à–∏–±–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–∞—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ dd.MM.yyyy.");
        }
    }
}
